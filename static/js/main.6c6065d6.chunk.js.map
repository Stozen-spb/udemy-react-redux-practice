{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","App.js","index.js"],"names":["module","exports","mainState","createSlice","name","initialState","products","id","title","price","description","cartItems","some","showCart","reducers","addLetter","state","action","payload","value","addProductToCart","cartItemIndex","findIndex","item","find","amount","push","increase","decrease","filter","showCartHandler","store","configureStore","reducer","main","mainActions","actions","Card","props","className","classes","card","children","CartItem","quantity","total","useDispatch","toFixed","itemprice","details","onClick","Cart","dispatch","useSelector","cartProducts","totalAmount","reduce","sum","current","cart","length","map","bind","CartButton","qnt","btnClasses","button","badge","MainHeader","header","Layout","ProductItem","Products","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c6065d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1zMOi\",\"details\":\"CartItem_details__2_Z3n\",\"quantity\":\"CartItem_quantity__DfEXm\",\"price\":\"CartItem_price__2Nl0j\",\"itemprice\":\"CartItem_itemprice__j9ZSt\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__WYS0J\",\"price\":\"ProductItem_price__1GiPR\",\"actions\":\"ProductItem_actions__14Yr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3nU_b\",\"badge\":\"CartButton_badge__3njqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3GqLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__k5Wsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1PCvW\"};","import { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialMainState = {\n    products: [\n        { id: 22, title: 'Sushi', price: 9.99, description: 'delicious sushi' },\n        { id: 45, title: 'Pizza', price: 8.99, description: 'delicious pizza' },\n        { id: 12, title: 'Coca-Cola', price: 2, description: '0.6 liter' },\n    ],\n    cartItems: [],\n    some: 'hello there general Kenoby',\n    showCart: false,\n};\nconst mainState = createSlice({\n    name: 'main',\n    initialState: initialMainState,\n    reducers: {\n        addLetter(state, action) {\n            state.some += action.payload.value;\n        },\n        addProductToCart(state, action) {\n            const cartItemIndex = state.cartItems.findIndex(\n                (item) => item.id == action.payload.id\n            );\n            const item = state.products.find(\n                (item) => item.id == action.payload.id\n            );\n            if (cartItemIndex >= 0) {\n                state.cartItems[cartItemIndex].amount++;\n                return;\n            }\n            state.cartItems.push({\n                ...item,\n                amount: 1,\n            });\n        },\n        increase(state, action) {\n            const item = state.cartItems.find(\n                (item) => item.id == action.payload\n            );\n            item.amount++;\n        },\n        decrease(state, action) {\n            const item = state.cartItems.find(\n                (item) => item.id == action.payload\n            );\n            if (item.amount > 1) {\n                item.amount--;\n                return;\n            }\n            state.cartItems = state.cartItems.filter(\n                (item) => item.id != action.payload\n            );\n        },\n        showCartHandler(state) {\n            state.showCart = !state.showCart;\n        },\n    },\n});\n\nconst store = configureStore({\n    reducer: { main: mainState.reducer },\n});\n\nexport const mainActions = mainState.actions;\nexport default store;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import classes from './CartItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { mainActions } from '../../store/index';\n\nconst CartItem = (props) => {\n    const { title, quantity, total, price, id, increase, decrease } =\n        props.item;\n    const dispatch = useDispatch();\n    return (\n        <li className={classes.item}>\n            <header>\n                <h3>{title}</h3>\n                <div className={classes.price}>\n                    ${total.toFixed(2)}{' '}\n                    <span className={classes.itemprice}>\n                        (${price.toFixed(2)}/item)\n                    </span>\n                </div>\n            </header>\n            <div className={classes.details}>\n                <div className={classes.quantity}>\n                    x <span>{quantity}</span>\n                </div>\n                <div className={classes.actions}>\n                    <button onClick={decrease}>-</button>\n                    <button onClick={increase}>+</button>\n                </div>\n            </div>\n        </li>\n    );\n};\n\nexport default CartItem;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { mainActions } from '../../store/index';\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\n\nconst Cart = (props) => {\n    const dispatch = useDispatch();\n    const text = useSelector((state) => state.main.some);\n    const addLetter = (e) => {\n        const payload = { value: '???' };\n        dispatch(mainActions.addLetter(payload));\n    };\n    const increase = (id) => {\n        dispatch(mainActions.increase(id));\n    };\n    const decrease = (id) => {\n        dispatch(mainActions.decrease(id));\n    };\n    const cartProducts = useSelector((state) => state.main.cartItems);\n    const totalAmount = cartProducts.reduce((sum, current) => {\n        return (sum += current.amount * current.price);\n    }, 0);\n    return (\n        <Card className={classes.cart}>\n            <h2>\n                Your Shopping Cart {cartProducts.length == 0 ? 'is empty' : ''}\n            </h2>\n            {/* <h2 onClick={addLetter}>{text}</h2> */}\n            <h2>Total Amount: ${totalAmount.toFixed(2)}</h2>\n            <ul>\n                {cartProducts.map((item) => {\n                    return (\n                        <CartItem\n                            key={item.id}\n                            item={{\n                                title: item.title,\n                                quantity: item.amount,\n                                total: item.amount * item.price,\n                                price: item.price,\n                                increase: increase.bind(null, item.id),\n                                decrease: decrease.bind(null, item.id),\n                            }}\n                        />\n                    );\n                })}\n            </ul>\n        </Card>\n    );\n};\n\nexport default Cart;\n","import React, { useEffect } from 'react';\n\nimport classes from './CartButton.module.css';\nimport { mainActions } from '../../store';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst CartButton = (props) => {\n    const dispatch = useDispatch();\n    const cartItems = useSelector((state) => state.main.cartItems);\n\n    const qnt =\n        cartItems.reduce((sum, current) => {\n            return (sum += current.amount);\n        }, 0) || 0;\n    const btnClasses =\n        classes.button + ' animated faster ' + `${qnt > 0 ? 'pulse' : ''}`;\n    const cartBtnHandler = () => {\n        dispatch(mainActions.showCartHandler());\n    };\n    return (\n        <button key={qnt} className={btnClasses} onClick={cartBtnHandler}>\n            <span>My Cart</span>\n            <span className={classes.badge}>{qnt}</span>\n        </button>\n    );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { mainActions } from '../../store/index';\n\nconst ProductItem = (props) => {\n    const { title, price, description, id } = props;\n    const dispatch = useDispatch();\n    const addToCart = () => {\n        dispatch(mainActions.addProductToCart({ id: id }));\n    };\n    return (\n        <li className={classes.item}>\n            <Card>\n                <header>\n                    <h3>{title}</h3>\n                    <div className={classes.price}>${price.toFixed(2)}</div>\n                </header>\n                <p>{description}</p>\n                <div className={classes.actions}>\n                    <button onClick={addToCart}>Add to Cart</button>\n                </div>\n            </Card>\n        </li>\n    );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\nimport { useSelector } from 'react-redux';\n\nconst Products = (props) => {\n    const products = useSelector((state) => state.main.products);\n    return (\n        <section className={classes.products}>\n            <h2>Buy your favorite products</h2>\n            <ul>\n                {products.map((item) => {\n                    return (\n                        <ProductItem\n                            id={item.id}\n                            key={item.id}\n                            title={item.title}\n                            price={item.price}\n                            description={item.description}\n                        />\n                    );\n                })}\n            </ul>\n        </section>\n    );\n};\n\nexport default Products;\n","import { useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\n\nfunction App() {\n    const showCart = useSelector((state) => state.main.showCart);\n    return (\n        <Layout>\n            {showCart && <Cart />}\n            <Products />\n        </Layout>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './assets/css/index.css';\nimport './assets/css/animate.css';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}